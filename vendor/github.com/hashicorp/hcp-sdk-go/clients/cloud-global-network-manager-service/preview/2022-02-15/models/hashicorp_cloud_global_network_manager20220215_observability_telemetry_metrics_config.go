// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig hashicorp cloud global network manager 20220215 observability telemetry metrics config
//
// swagger:model hashicorp.cloud.global_network_manager_20220215.observability.TelemetryMetricsConfig
type HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig struct {

	// Endpoint is the URL to use when exporting metrics via OTLP. If set will override the global endpoint in TelemetryConfig
	Endpoint string `json:"endpoint,omitempty"`

	// IncludeList is a list of regular expressions used to configure the metrics pipeline filter
	IncludeList []string `json:"include_list"`
}

// Validate validates this hashicorp cloud global network manager 20220215 observability telemetry metrics config
func (m *HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud global network manager 20220215 observability telemetry metrics config based on context it is used
func (m *HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudGlobalNetworkManager20220215ObservabilityTelemetryMetricsConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
